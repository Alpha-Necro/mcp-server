name: Deploy

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          MCP Server Release v${{ github.run_number }}
          
          Docker image: `ghcr.io/${{ github.repository }}:${{ github.sha }}`
          
          Changes included in this release:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    
    - name: Deploy to Server
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ACCESS_TOKEN: ${{ secrets.MCP_GITHUB_TOKEN }}
        GITHUB_WEBHOOK_SECRET: ${{ secrets.MCP_WEBHOOK_SECRET }}
      run: |
        echo "Deploying version ${{ github.sha }} to production"
        
        # Set up deployment configuration
        echo "Setting up deployment environment..."
        
        # Create deployment configuration
        cat > config.env << EOL
        GITHUB_ACCESS_TOKEN=${MCP_GITHUB_TOKEN}
        GITHUB_WEBHOOK_SECRET=${MCP_WEBHOOK_SECRET}
        EOL
        
        echo "âœ… Deployment configuration created"
        echo "ðŸš€ Ready for deployment to your server"
